// Code generated by goctl. DO NOT EDIT!
// Source: university.proto

package universityrpc

import (
	"context"

	"backend/app/university/rpc/university"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	GetStudentInfoReq  = university.GetStudentInfoReq
	GetStudentInfoResp = university.GetStudentInfoResp
	Student            = university.Student

	UniversityRpc interface {
		GetStudentInfo(ctx context.Context, in *GetStudentInfoReq, opts ...grpc.CallOption) (*GetStudentInfoResp, error)
	}

	defaultUniversityRpc struct {
		cli zrpc.Client
	}
)

func NewUniversityRpc(cli zrpc.Client) UniversityRpc {
	return &defaultUniversityRpc{
		cli: cli,
	}
}

func (m *defaultUniversityRpc) GetStudentInfo(ctx context.Context, in *GetStudentInfoReq, opts ...grpc.CallOption) (*GetStudentInfoResp, error) {
	client := university.NewUniversityRpcClient(m.cli.Conn())
	return client.GetStudentInfo(ctx, in, opts...)
}
