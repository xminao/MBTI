// Code generated by goctl. DO NOT EDIT!
// Source: university.proto

package universityrpc

import (
	"context"

	"backend/app/university/rpc/university"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	College         = university.College
	CollegeListReq  = university.CollegeListReq
	CollegeListResp = university.CollegeListResp

	UniversityRpc interface {
		CollegeList(ctx context.Context, in *CollegeListReq, opts ...grpc.CallOption) (*CollegeListResp, error)
	}

	defaultUniversityRpc struct {
		cli zrpc.Client
	}
)

func NewUniversityRpc(cli zrpc.Client) UniversityRpc {
	return &defaultUniversityRpc{
		cli: cli,
	}
}

func (m *defaultUniversityRpc) CollegeList(ctx context.Context, in *CollegeListReq, opts ...grpc.CallOption) (*CollegeListResp, error) {
	client := university.NewUniversityRpcClient(m.cli.Conn())
	return client.CollegeList(ctx, in, opts...)
}
