syntax = "v1"

info(
	title: "用户系统"
	desc: "用户系统"
	author: "许敏浩"
	email: "xminao@yeah.net"
	version: "v1"
)

type UserInfo {
	Username         string `json:"username"`           // 用户名
	Nickname         string `json:"nickname"`           // 昵称
	Password         string `json:"password"`           // 密码
	Gender           string `json:"gender"`             // 性别
	AuthGroup        string `json:"auth_group"`         // 认证权限
	BindingStudentId string `json:"binding_student_id"` // 绑定的学号
	CreatedAt        int64  `json:"created_at"`         // 创建时间
	UpdateAt         int64  `json:"update_at"`          // 更新时间
}

type JwtToken {
	AccessToken  string `json:"access_token"`
	AccessExpire int64  `json:"access_expire"`
	RefreshAfter int64  `json:"refresh_after"`
}

type (
	RegisterReq {
		Username         string `json:"username"`
		NickName         string `json:"nickname"`
		Password         string `json:"password"`
		Gender           string `json:"gender"`
		BindingStudentId string `json:"binding_student_id"`
	}

	RegisterResp {
		Msg      string `json:"msg"`
		Nickname string `json:"nickname"`
	}
)

type (
	LoginReq {
		Username string `json:"username"`
		Password string `json:"password"`
	}

	LoginResp {
		Msg      string   `json:"msg"`
		Username string   `json:"username"`
		Nickname string   `json:"nickname"`
		Jwt      JwtToken `json:"jwt_token"`
	}
)

type (
	GetUserInfoReq {
		Username string `form:"username"`
	}

	GetUserInfoResp {
		UserInfoResp UserInfo `json:"userinfo"`
	}
)

type (
	GetUserListReq {
	}

	GetUserListResp {
		UserList []UserInfo `json:"userlist"`
	}
)

@server (
	jwt: Auth
)
service user-api {
	@handler getuserinfo
	get /user/getuserinfo (GetUserInfoReq) returns (GetUserInfoResp)
	@handler getuserlist
	get /user/getuserlist (GetUserListReq) returns (GetUserListResp)
}

service user-api {
	//注册
	@handler register
	post /user/register (RegisterReq)	returns (RegisterResp)
	//登录
	@handler login
	post /user/login (LoginReq) returns (LoginResp)
}