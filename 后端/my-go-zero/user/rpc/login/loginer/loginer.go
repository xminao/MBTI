// Code generated by goctl. DO NOT EDIT!
// Source: login.proto

package loginer

import (
	"context"

	"user/rpc/login/login"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	LoginReq  = login.LoginReq
	LoginResp = login.LoginResp

	Loginer interface {
		Login(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*LoginResp, error)
	}

	defaultLoginer struct {
		cli zrpc.Client
	}
)

func NewLoginer(cli zrpc.Client) Loginer {
	return &defaultLoginer{
		cli: cli,
	}
}

func (m *defaultLoginer) Login(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*LoginResp, error) {
	client := login.NewLoginerClient(m.cli.Conn())
	return client.Login(ctx, in, opts...)
}
